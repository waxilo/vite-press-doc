name: Deploy VitePress site to Pages

on:
  push:
    branches:
      - master  # 当 master 分支有提交时触发
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 需要写权限来推送到新分支

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub提供的令牌

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Build VitePress site
        run: npm run docs:build

      - name: List build output
        run: ls -la docs/.vitepress/dist

      - name: Deploy to gh-pages branch
        run: |
          # 配置Git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
          # 检查构建输出目录是否存在
          if [ ! -d "docs/.vitepress/dist" ]; then
            echo "构建输出目录不存在！"
            exit 1
          fi
          
          # 创建并切换到一个新的gh-pages分支
          git checkout --orphan gh-pages
          
          # 删除工作区中的所有文件
          git rm -rf .
          
          # 复制构建输出到根目录
          cp -r docs/.vitepress/dist/* .
          
          # 添加.nojekyll文件以禁用Jekyll处理
          touch .nojekyll
          
          # 添加所有文件并提交
          git add .
          git commit -m "Deploy to GitHub Pages"
          
          # 强制推送到gh-pages分支
          git push -f origin gh-pages
